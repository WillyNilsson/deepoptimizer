name: Publish DeepOptimizer CLI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags (v0.1.0, v1.0.0, etc.)
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write  # Need write permission to create releases
  
jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install pytest pytest-cov
    
    - name: Test CLI commands
      run: |
        deepoptimizer --version
        deepoptimizer --help
        deepoptimizer doctor
        
    - name: Test basic analysis (no API key)
      run: |
        deepoptimizer analyze examples/demo_model/simple_mnist_model.py --no-llm

  publish:
    needs: test
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')  # Only run on tags
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Check package
      run: twine check dist/*
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*
    
    - name: Upload artifacts for release
      uses: actions/upload-artifact@v4
      with:
        name: dist-files
        path: dist/*

  create-release:
    needs: publish
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist-files
        path: dist
    
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: DeepOptimizer ${{ github.ref_name }}
        body: |
          # DeepOptimizer ${{ github.ref_name }}
          
          AI-powered ML code analyzer and optimization tool.
          
          ## Installation
          
          ```bash
          pip install deepoptimizer
          ```
          
          ## What's Changed
          
          See [CHANGELOG.md](https://github.com/${{ github.repository }}/blob/main/CHANGELOG.md) for details.
          
          ## Full Changelog
          
          https://github.com/${{ github.repository }}/compare/v0.1.0...${{ github.ref_name }}
        draft: false
        prerelease: false
        files: |
          dist/*